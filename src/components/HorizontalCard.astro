---
// @ts-ignore Astro global is available in .astro frontmatter
const {
  title,
  img,
  desc,
  url,
  badge,
  tags,
  target = "_blank",
  pubDate,
} = Astro.props;
const tag_url = url.split("/").slice(0, -1).join("/") + "/tag";

// Debug log tags
console.log(
  `HorizontalCard: ${title} - Tags: ${tags ? JSON.stringify(tags) : "undefined"}`,
);
const formattedDate = pubDate
  ? new Date(pubDate).toLocaleDateString("en-US", {
      month: "long",
      day: "2-digit",
      year: "numeric",
    })
  : "";
---

<div
  class="rounded-lg bg-base-100 hover:shadow-xl transition ease-in-out hover:scale-[102%] blog-post-card"
  data-title={title}
  data-description={desc}
  data-tags={tags && tags.length > 0 ? tags.join(",") : ""}
  data-date={pubDate}
>
  <a href={url} target={target}>
    <div class="hero-content flex-col md:flex-row-reverse">
      {
        img && (
          <img
            src={img}
            alt={title}
            loading="lazy"
            class="max-w-full md:max-w-[13rem] rounded-lg"
          />
        )
      }
      <div class="grow w-full">
        {
          formattedDate && (
            <div class="text-xs opacity-70 mb-1">{formattedDate}</div>
          )
        }
        <h1 class="text-xl font-bold">
          {title}
          {badge && <div class="badge badge-secondary mx-2">{badge}</div>}
        </h1>
        <p class="py-1 text-1xl">{desc}</p>
        <div class="card-actions justify-end">
          {
            tags &&
              tags.map((tag) => (
                <a href={`${tag_url}/${tag}`} class="badge badge-outline">
                  {tag}
                </a>
              ))
          }
        </div>
      </div>
    </div>
  </a>
</div>
